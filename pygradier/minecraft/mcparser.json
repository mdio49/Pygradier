{
    "group_defs": [
        {
            "name": "Boolean",
            "regex": "true|false"
        },
        {
            "name": "CompoundOpen",
            "regex": "\\{"
        },
        {
            "name": "ListOpen",
            "regex": "\\["
        }
    ],
    "start": {
        "region": "ParameterRegion",
        "state": "CommandStartState"
    },
    "regions": {
        "ParameterRegion": {
            "group_defs": [
                {
                    "name": "Operator",
                    "regex": "\\.(?![:.])"
                },
                {
                    "name": "ListIndexOpen",
                    "regex": "\\[(?=-?\\d+\\]|\\{)"
                },
                {
                    "name": "ListIndexClose",
                    "regex": "\\]"
                },
                {
                    "name": "ParameterEnd",
                    "regex": "(?=\\s)|$"
                }
            ],
            "states": {
                "CommandStartState": {
                    "group_defs": [
                        {
                            "name": "CommentStart",
                            "regex": "#\\s*"
                        },
                        {
                            "name": "CommandStart",
                            "regex": "/?"
                        }
                    ],
                    "groups": [
                        "CommentStart",
                        "CommandStart"
                    ],
                    "transitions": [
                        {
                            "group": "CommentStart",
                            "target": "CommentState"
                        },
                        {
                            "group": "CommandStart",
                            "target": "ParameterState"
                        }
                    ],
                    "tokenize": false
                },
                "CommentState": {
                    "group_defs": [
                        {
                            "name": "Comment",
                            "regex": "^.*$"
                        }
                    ],
                    "groups": [
                        "Comment"
                    ],
                    "transitions": [
                        {
                            "operation": "end"
                        }
                    ]
                },
                "ParameterState": {
                    "group_defs": [
                        {
                            "name": "HybridParameter",
                            "regex": "(?=[^\\s])"
                        },
                        {
                            "name": "SelectorParameter",
                            "regex": "@[aeprs]"
                        },
                        {
                            "name": "Keyword",
                            "regex": "[A-Za-z0-9_\\-$#/]+(?:(?=\\s)|$)"
                        },
                        {
                            "name": "UUID",
                            "regex": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"
                        },
                        {
                            "name": "Symbol",
                            "regex": "[<>]=?|[+\\-*/%]?=|><|\\*"
                        },
                        {
                            "name": "EOL",
                            "regex": "$"
                        }
                    ],
                    "groups": [
                        "UUID",
                        "Symbol",
                        "String",
                        "Range",
                        "Number",
                        "Keyword",
                        "RelativeFloat",
                        "SelectorParameter",
                        "HybridParameter",
                        "EOL"
                    ],
                    "transitions": [
                        {
                            "group": "HybridParameter",
                            "target": "ParameterState_FirstToken",
                            "operation": "push",
                            "value": {
                                "state": "WhitespaceState"
                            }
                        },
                        {
                            "group": "SelectorParameter",
                            "target": "SelectorParameterState",
                            "operation": "push",
                            "value": {
                                "state": "WhitespaceState"
                            }
                        },
                        {
                            "group": "Keyword",
                            "target": "WhitespaceState"
                        },
                        {
                            "group": "EOL",
                            "operation": "end"
                        },
                        {
                            "target": "WhitespaceState"
                        }
                    ]  
                },
                "WhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s|$"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "ParameterState"
                        }
                    ],
                    "tokenize": false
                },
                "ParameterState_FirstToken": {
                    "groups": [
                        "CompoundOpen",
                        "ListOpen",
                        "String",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundOpen",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "OperatorState_NoCompounds"
                            }
                        },
                        {
                            "group": "ListOpen",
                            "target": "ListOpen",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "ParameterEndState"
                            }
                        },
                        {
                            "group": "String",
                            "target": "OperatorState_WithCompounds"
                        },
                        {
                            "group": "Word",
                            "target": "OperatorState_WithCompounds"
                        },
                        {
                            "group": "Generic",
                            "target": "OperatorState_WithCompounds"
                        },
                        {
                            "target": "ParameterEndState"
                        }
                    ]
                },
                "ParameterState_ChainedToken": {
                    "groups": [
                        "ParameterEnd",
                        "String",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "ParameterEnd",
                            "operation": "pop"
                        },
                        {
                            "target": "OperatorState_WithCompounds"
                        }
                    ]
                },
                "OperatorState_WithCompounds": {
                    "group_defs": [
                        {
                            "name": "BlockStatesOpen",
                            "regex": "\\["
                        },
                        {
                            "name": "NamespaceSeparator",
                            "regex": ":(?![:.])"
                        }
                    ],
                    "groups": [
                        "ParameterEnd",
                        "CompoundOpen",
                        "ListIndexOpen",
                        "BlockStatesOpen",
                        "NamespaceSeparator",
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundOpen",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "OperatorState_NoCompounds"
                            }
                        },
                        {
                            "group": "ListIndexOpen",
                            "target": "ListIndexState",
                            "operation": "push",
                            "value": {
                                "state": "OperatorState_NoCompounds"
                            }
                        },
                        {
                            "group": "BlockStatesOpen",
                            "target": "BlockStatesStartState",
                            "operation": "push",
                            "value": {
                                "state": "OperatorState_Compound"
                            }
                        },
                        {
                            "group": "NamespaceSeparator",
                            "target": "ParameterState_ChainedToken"
                        },
                        {
                            "group": "Operator",
                            "target": "ParameterState_ChainedToken"
                        },
                        {
                            "group": "ParameterEnd",
                            "operation": "pop"
                        }
                    ]
                },
                "OperatorState_NoCompounds": {
                    "groups": [
                        "ParameterEnd",
                        "ListIndexOpen",
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "group": "ListIndexOpen",
                            "target": "ListIndexState",
                            "operation": "push"
                        },
                        {
                            "group": "Operator",
                            "target": "ParameterState_ChainedToken"
                        },
                        {
                            "group": "ParameterEnd",
                            "operation": "pop"
                        }
                    ]
                },
                "OperatorState_Compound": {
                    "groups": [
                        "ParameterEnd",
                        "CompoundOpen"
                    ],
                    "transitions": [
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundOpen",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "ParameterEndState"
                            }
                        },
                        {
                            "group": "ParameterEnd",
                            "operation": "pop"
                        }
                    ]
                },
                "ListIndexState": {
                    "groups": [
                        "ListIndexClose",
                        "CompoundOpen",
                        "Integer"
                    ],
                    "transitions": [
                        {
                            "group": "ListIndexClose",
                            "operation": "pop"
                        },
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundOpen",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "ListIndexEndState"
                            }
                        },
                        {
                            "group": "Integer",
                            "target": "ListIndexEndState"
                        }
                    ]
                },
                "ListIndexEndState": {
                    "groups": [
                        "ListIndexClose"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ]
                },
                "ParameterEndState": {
                    "groups": [
                        "ParameterEnd"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ]
                },
                "SelectorParameterState": {
                    "group_defs": [
                        {
                            "name": "SelectorOpen",
                            "regex": "\\[\\s*"
                        },
                        {
                            "name": "Whitespace",
                            "regex": "(?=\\s)|$"
                        }
                    ],
                    "groups": [
                        "SelectorOpen",
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "group": "SelectorOpen",
                            "target": "ArgumentState",
                            "region": "SelectorArgumentRegion"
                        },
                        {
                            "group": "Whitespace",
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                },
                "BlockStatesStartState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "BlockStatesNameState"
                        }
                    ],
                    "tokenize": false
                },
                "BlockStatesNameState": {
                    "group_defs": [
                        {
                            "name": "BlockStatesEnd",
                            "regex": "\\]"
                        }
                    ],
                    "groups": [
                        "BlockStatesEnd",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "Word",
                            "target": "BlockStatesOperatorState",
                            "operation": "push"
                        },
                        {
                            "group": "BlockStatesEnd",
                            "operation": "pop"
                        }
                    ]
                },
                "BlockStatesOperatorState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*=\\s*"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "target": "BlockStatesValueState"
                        }
                    ],
                    "tokenize": false
                },
                "BlockStatesValueState": {
                    "groups": [
                        "Word"
                    ],
                    "transitions": [
                        {
                            "target": "BlockStatesEndState"
                        }
                    ]
                },
                "BlockStatesEndState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\]))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                }
            }
        },
        "SelectorArgumentRegion": {
            "group_defs": [
                {
                    "name": "Negation",
                    "regex": "!(?!\\s*\\!)"
                }
            ],
            "templates": {
                "NoOpToArgumentStateTemplate": {
                    "group_defs": [
                        {
                            "name": "NoOperation",
                            "regex": "(?=.)|$"
                        }
                    ],
                    "groups": [
                        "NoOperation"
                    ],
                    "transitions": [
                        {
                            "target": "ArgumentState"
                        }
                    ],
                    "tokenize": false
                }
            },
            "states": {
                "ArgumentState": {
                    "group_defs": [
                        {
                            "name": "SelectorArgument",
                            "regex": "\\w+(?=\\s*\\=)"
                        },
                        {
                            "name": "ScoresArgument",
                            "regex": "scores(?=\\s*\\=)"
                        },
                        {
                            "name": "NBTArgument",
                            "regex": "nbt(?=\\s*\\=)"
                        },
                        {
                            "name": "AdvancementsArgument",
                            "regex": "advancements(?=\\s*\\=)"
                        },
                        {
                            "name": "SelectorClose",
                            "regex": "\\]"
                        }
                    ],
                    "groups": [
                        "NBTArgument",
                        "ScoresArgument",
                        "AdvancementsArgument",
                        "SelectorArgument",
                        "SelectorClose"
                    ],
                    "transitions": [
                        {
                            "group": "NBTArgument",
                            "target": "OperatorState",
                            "operation": "push",
                            "value": {
                                "state": "NBTArgumentState"
                            }
                        },
                        {
                            "group": "ScoresArgument",
                            "target": "OperatorState",
                            "operation": "push",
                            "value": {
                                "state": "ScoresArgumentState"
                            }
                        },
                        {
                            "group": "AdvancementsArgument",
                            "target": "OperatorState",
                            "operation": "push",
                            "value": {
                                "state": "AdvancementsArgumentState"
                            }
                        },
                        {
                            "group": "SelectorArgument",
                            "target": "OperatorState",
                            "operation": "push"
                        },
                        {
                            "group": "SelectorClose",
                            "operation": "pop"
                        }
                    ]
                },
                "NBTArgumentState": {
                    "template": "NoOpToArgumentStateTemplate"
                },
                "ScoresArgumentState": {
                    "template": "NoOpToArgumentStateTemplate"
                },
                "AdvancementsArgumentState": {
                    "template": "NoOpToArgumentStateTemplate"
                },
                "OperatorState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*\\=\\s*"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "target": "ValueState",
                            "operation": "peek",
                            "value": {
                                "state": "ArgumentState"
                            }
                        },
                        {
                            "target": "ScoresState",
                            "operation": "peek",
                            "value": {
                                "state": "ScoresArgumentState"
                            }
                        },
                        {
                            "target": "NBTState",
                            "operation": "peek",
                            "value": {
                                "state": "NBTArgumentState"
                            }
                        },
                        {
                            "target": "AdvancementsState",
                            "operation": "peek",
                            "value": {
                                "state": "AdvancementsArgumentState"
                            }
                        },
                        {
                            "target": "ScoresValueState",
                            "operation": "peek",
                            "value": {
                                "state": "ScoresObjectiveState"
                            }
                        },
                        {
                            "target": "AdvancementsValueState",
                            "operation": "peek",
                            "value": {
                                "state": "AdvancementsNameState"
                            }
                        }
                    ],
                    "tokenize": false
                },
                "NBTState": {
                    "groups": [
                        "Negation",
                        "CompoundOpen"
                    ],
                    "transitions": [
                        {
                            "group": "Negation",
                            "target": "NBTWhitespaceState"
                        },
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundState",
                            "region": "NBTRegion",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        }
                    ]
                },
                "NBTWhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "NBTState"
                        }
                    ],
                    "tokenize": false
                },
                "ScoresState": {
                    "group_defs": [
                        {
                            "name": "ScoresOpen",
                            "regex": "\\{"
                        }
                    ],
                    "groups": [
                        "ScoresOpen"
                    ],
                    "transitions": [
                        {
                            "target": "ScoresWhitespaceState",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        }
                    ]
                },
                "ScoresWhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "ScoresObjectiveState"
                        }
                    ],
                    "tokenize": false
                },
                "ScoresObjectiveState": {
                    "group_defs": [
                        {
                            "name": "ScoreboardObjective",
                            "regex": "[\\w\\.\\-+]+(?=\\s*\\=)"
                        },
                        {
                            "name": "ScoresClose",
                            "regex": "\\}"
                        }
                    ],
                    "groups": [
                        "ScoreboardObjective",
                        "ScoresClose"
                    ],
                    "transitions": [
                        {
                            "group": "ScoreboardObjective",
                            "target": "OperatorState",
                            "operation": "push"
                        },
                        {
                            "group": "ScoresClose",
                            "operation": "pop"
                        }
                    ]
                },
                "AdvancementsState": {
                    "group_defs": [
                        {
                            "name": "AdvancementsOpen",
                            "regex": "\\{"
                        }
                    ],
                    "groups": [
                        "AdvancementsOpen"
                    ],
                    "transitions": [
                        {
                            "group": "AdvancementsOpen",
                            "target": "AdvancementsWhitespaceState",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        }
                    ]
                },
                "AdvancementsWhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "AdvancementsNameState"
                        }
                    ],
                    "tokenize": false
                },
                "AdvancementsNameState": {
                    "group_defs": [
                        {
                            "name": "Advancement",
                            "regex": "(\\w+:)?[\\w/]+(?=\\s*=)"
                        },
                        {
                            "name": "AdvancementsClose",
                            "regex": "\\}"
                        }
                    ],
                    "groups": [
                        "Advancement",
                        "AdvancementsClose"
                    ],
                    "transitions": [
                        {
                            "group": "Advancement",
                            "target": "OperatorState",
                            "operation": "push"
                        },
                        {
                            "group": "AdvancementsClose",
                            "operation": "pop"
                        }
                    ]
                },
                "ValueState": {
                    "group_defs": [
                        {
                            "name": "Empty",
                            "regex": "(?=\\s*[,\\]])"
                        }
                    ],
                    "groups": [
                        "Negation",
                        "String",
                        "Interval",
                        "Float",
                        "NamespacedID",
                        "Word",
                        "Empty"
                    ],
                    "transitions": [
                        {
                            "group": "Negation",
                            "target": "ValueWhitespaceState"
                        },
                        {
                            "target": "ValueEndState"
                        }
                    ]
                },
                "ValueWhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "ValueState"
                        }
                    ],
                    "tokenize": false
                },
                "ScoresValueState": {
                    "groups": [
                        "Range",
                        "Integer"
                    ],
                    "transitions": [
                        {
                            "target": "BraceEndState"
                        }
                    ]
                },
                "AdvancementsValueState": {
                    "group_defs": [
                        {
                            "name": "CriteriaOpen",
                            "regex": "\\{"
                        }
                    ],
                    "groups": [
                        "CriteriaOpen",
                        "Boolean"
                    ],
                    "transitions": [
                        {
                            "group": "CriteriaOpen",
                            "target": "CriteriaWhitespaceState",
                            "operation": "push",
                            "value": {
                                "state": "BraceEndState"
                            }
                        },
                        {
                            "group": "Boolean",
                            "target": "BraceEndState"
                        }
                    ]
                },
                "CriteriaWhitespaceState": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "transitions": [
                        {
                            "target": "CriteriaState"
                        }
                    ],
                    "tokenize": false
                },
                "CriteriaState": {
                    "group_defs": [
                        {
                            "name": "CriteriaClose",
                            "regex": "\\}"
                        }
                    ],
                    "groups": [
                        "CriteriaClose",
                        "String",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "CriteriaClose",
                            "operation": "pop"
                        },
                        {
                            "target": "CriteriaOperatorState",
                            "operation": "push"
                        }
                    ]
                },
                "CriteriaOperatorState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*\\=\\s*"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "target": "CriteriaValueState"
                        }
                    ],
                    "tokenize": false
                },
                "CriteriaValueState": {
                    "groups": [
                        "Boolean"
                    ],
                    "transitions": [
                        {
                            "target": "CriteriaEndState"
                        }
                    ]
                },
                "CriteriaEndState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\}))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                },
                "BraceEndState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\}))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                },
                "ValueEndState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\]))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                }
            }
        },
        "NBTRegion": {
            "group_defs": [
                {
                    "name": "ByteArrayOpen",
                    "regex": "\\[B;"
                },
                {
                    "name": "IntArrayOpen",
                    "regex": "\\[I;"
                },
                {
                    "name": "LongArrayOpen",
                    "regex": "\\[L;"
                }
            ],
            "templates": {
                "OpenTemplate": {
                    "group_defs": [
                        {
                            "name": "Whitespace",
                            "regex": "\\s*"
                        }
                    ],
                    "groups": [
                        "Whitespace"
                    ],
                    "tokenize": false
                }
            },
            "states": {
                "CompoundOpen": {
                    "template": "OpenTemplate",
                    "transitions": [
                        {
                            "target": "CompoundState"
                        }
                    ]
                },
                "ListOpen": {
                    "template": "OpenTemplate",
                    "transitions": [
                        {
                            "target": "ListState"
                        }
                    ]
                },
                "ArrayOpen": {
                    "template": "OpenTemplate",
                    "transitions": [
                        {
                            "target": "ArrayState"
                        }
                    ]
                },
                "CompoundState": {
                    "group_defs": [
                        {
                            "name": "Tag",
                            "regex": "\\w+(?=\\s*:)"
                        },
                        {
                            "name": "CompoundClose",
                            "regex": "\\}"
                        }
                    ],
                    "groups": [
                        "CompoundClose",
                        "String",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "CompoundClose",
                            "operation": "pop"
                        },
                        {
                            "target": "OperatorState",
                            "operation": "push"
                        }
                    ]
                },
                "OperatorState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*:\\s*"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "target": "ValueState"
                        }
                    ],
                    "tokenize": false
                },
                "ListState": {
                    "group_defs": [
                        {
                            "name": "ListEntry",
                            "regex": "(?=.)"
                        },
                        {
                            "name": "ListClose",
                            "regex": "\\]"
                        }
                    ],
                    "groups": [
                        "ListClose",
                        "ListEntry"
                    ],
                    "transitions": [
                        {
                            "group": "ListClose",
                            "operation": "pop"
                        },
                        {
                            "group": "ListEntry",
                            "target": "ValueState",
                            "operation": "push"
                        }
                    ]
                },
                "ArrayState": {
                    "group_defs": [
                        {
                            "name": "ArrayClose",
                            "regex": "\\]"
                        }
                    ],
                    "groups": [
                        "ArrayClose",
                        "Integer"
                    ],
                    "transitions": [
                        {
                            "group": "ArrayClose",
                            "operation": "pop"
                        },
                        {
                            "group": "Integer",
                            "target": "ArrayOperatorState"
                        }
                    ]
                },
                "ArrayOperatorState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\]))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "target": "ArrayState"
                        }
                    ],
                    "tokenize": false
                },
                "ValueState": {
                    "groups": [
                        "CompoundOpen",
                        "ByteArrayOpen",
                        "IntArrayOpen",
                        "LongArrayOpen",
                        "ListOpen",
                        "String",
                        "Number",
                        "Boolean",
                        "Word"
                    ],
                    "transitions": [
                        {
                            "group": "CompoundOpen",
                            "target": "CompoundOpen",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        },
                        {
                            "group": "ListOpen",
                            "target": "ListOpen",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        },
                        {
                            "group": "ByteArrayOpen",
                            "target": "ArrayOpen",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        },
                        {
                            "group": "IntArrayOpen",
                            "target": "ArrayOpen",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        },
                        {
                            "group": "LongArrayOpen",
                            "target": "ArrayOpen",
                            "operation": "push",
                            "value": {
                                "state": "ValueEndState"
                            }
                        },
                        {
                            "target": "ValueEndState"
                        }
                    ]
                },
                "ValueEndState": {
                    "group_defs": [
                        {
                            "name": "Operator",
                            "regex": "\\s*(?:,\\s*|(?=\\})|(?=\\]))"
                        }
                    ],
                    "groups": [
                        "Operator"
                    ],
                    "transitions": [
                        {
                            "operation": "pop"
                        }
                    ],
                    "tokenize": false
                }
            }
        }
    }
}
